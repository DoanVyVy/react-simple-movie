{"version":3,"file":"static/js/468.4188720a.chunk.js","mappings":"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","sources":["components/movie/MovieCard.js","pages/MovieDetailPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"apiConfig/config\";\r\nimport Button from \"components/button/Button\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-800\">\r\n      <img\r\n        src={tmdbAPI.image500(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\r\n      />\r\n      <h3 className=\"mb-3 text-xl font-bold\">{title}</h3>\r\n      <div className=\"flex flex-col flex-1\">\r\n        <div className=\"flex items-center justify-between mb-10 text-sm opacity-50\">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button onClick={() => navigate(`/movie/${id}`)} full>Watch now</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport MovieCard from \"components/movie/MovieCard\";\r\nimport { fetcher, tmdbAPI } from \"apiConfig/config\";\r\n\r\nconst MovieDetailPage = () => {\r\n  \r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  const { backdrop_path, poster_path, title, genres, overview } = data;\r\n  return (\r\n    <div className=\"py-10\">\r\n      <div className=\"w-full h-[600px] relative\">\r\n        <div className=\"absolute inset-0 bg-black bg-opacity-70 overlay\"></div>\r\n        <div\r\n          className=\"w-full h-full bg-no-repeat bg-cover\"\r\n          style={{\r\n            backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"w-full h-[400px] max-w-[800px] mx-auto -mt-[200px] relative z-10 pb-10\">\r\n        <img\r\n          src={tmdbAPI.imageOriginal(poster_path)}\r\n          alt=\"\"\r\n          className=\"object-cover w-full h-full rounded-xl\"\r\n        />\r\n      </div>\r\n      <h1 className=\"mb-10 text-4xl font-bold text-center text-white\">\r\n        {title}\r\n      </h1>\r\n      {genres.length > 0 && (\r\n        <div className=\"flex items-center justify-center mb-10 gap-x-5\">\r\n          {genres.map((item) => (\r\n            <span\r\n              className=\"px-4 py-2 border rounded border-primary text-primary\"\r\n              key={item.id}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <p className=\"text-sm leading-relaxed text-center max-w-[600px] mx-auto mb-10\">\r\n        {overview}\r\n      </p>\r\n      <MovieCredits></MovieCredits>\r\n      <MovieVideo></MovieVideo>\r\n      <MovieSimilar></MovieSimilar>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction MovieCredits() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieInfo(movieId, \"credits\"), fetcher);\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  const { cast } = data;\r\n  if (!cast || cast.length <= 0) {\r\n    return null;\r\n  }\r\n  console.log(\"MovieCredits ~ data\", data);\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"mb-10 text-3xl text-center\">Casts</h2>\r\n      <div className=\"grid grid-cols-4 gap-5\">\r\n        {cast.slice(0, 8).map((item) => (\r\n          <div className=\"cast-item\" key={item.id}>\r\n            <img\r\n              src={tmdbAPI.imageOriginal(item.profile_path)}\r\n              alt=\"\"\r\n              className=\"w-full h-[300px] object-cover rounded-lg mb-3\"\r\n            />\r\n            <h3 className=\"text-xl font-medium text-center\">{item.name}</h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieVideo() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieInfo(movieId, \"videos\"), fetcher);\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"py-10\">\r\n      <div className=\"flex flex-col gap-10\">\r\n        {results.slice(0, 1).map((item) => (\r\n          <div className=\"\" key={item.id}>\r\n            <h3 className=\"inline-block p-3 mb-5 text-xl font-medium bg-secondary\">\r\n              {item.name}\r\n            </h3>\r\n            <div key={item.id} className=\"w-full aspect-video\">\r\n              <iframe\r\n                width=\"942\"\r\n                height=\"530\"\r\n                src={tmdbAPI.imageOriginal(item.key)}\r\n                title=\"Lil Wuyn - CATL (Remix)\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n                className=\"object-fill w-full h-full\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieSimilar() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieInfo(movieId, \"similar\"), fetcher);\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"mb-10 text-3xl font-medium\">Similar</h2>\r\n      <div className=\"movie-list\">\r\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n          {results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <MovieCard item={item}></MovieCard>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetailPage;\r\n"],"names":["item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","className","src","tmdbAPI","alt","Date","getFullYear","onClick","full","MovieCredits","movieId","useParams","data","useSWR","fetcher","cast","length","console","log","slice","map","profile_path","name","MovieVideo","results","width","height","key","frameBorder","allow","allowFullScreen","MovieSimilar","grabCursor","spaceBetween","slidesPerView","backdrop_path","genres","overview","style","backgroundImage"],"sourceRoot":""}