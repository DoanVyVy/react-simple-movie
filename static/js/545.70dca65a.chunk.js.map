{"version":3,"file":"static/js/545.70dca65a.chunk.js","mappings":"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","sources":["components/loading/LoadingSkeleton.js","components/movie/MovieCard.js","pages/MoviesPage.js","hooks/useDebounce.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst LoadingSkeleton = (props) => {\r\n  return (\r\n    <div\r\n      className={`skeleton ${props.className}`}\r\n      style={{\r\n        height: props.height,\r\n        width: props.width || \"100%\",\r\n        borderRadius: props.radius,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default LoadingSkeleton;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"apiConfig/config\";\r\nimport Button from \"components/button/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport LoadingSkeleton from \"components/loading/LoadingSkeleton\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-800\">\r\n      <img\r\n        src={tmdbAPI.image500(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\r\n      />\r\n      <h3 className=\"mb-3 text-xl font-bold\">{title}</h3>\r\n      <div className=\"flex flex-col flex-1\">\r\n        <div className=\"flex items-center justify-between mb-10 text-sm opacity-50\">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button onClick={() => navigate(`/movie/${id}`)} full>\r\n          Watch now\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  item: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n    release_date: PropTypes.string,\r\n    poster_path: PropTypes.string,\r\n    id: PropTypes.number,\r\n  }),\r\n};\r\n\r\nfunction FallbackComponent() {\r\n  return (\r\n    <p className=\"text-red-400 bg-red-50\">\r\n      Something went wrong with this component\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default withErrorBoundary(MovieCard, {\r\n  FallbackComponent,\r\n});\r\n\r\nexport const MovieCardSkeleton = () => {\r\n  return (\r\n    <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-800\">\r\n      <LoadingSkeleton\r\n        width=\"100%\"\r\n        height=\"250px\"\r\n        radius=\"8px\"\r\n        className=\"mb-5\"\r\n      ></LoadingSkeleton>\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"mb-3 text-xl font-bold\">\r\n          <LoadingSkeleton width=\"100%\" height=\"20px\"></LoadingSkeleton>\r\n        </h3>\r\n        <div className=\"flex items-center justify-between mb-10 text-sm opacity-50\">\r\n          <span>\r\n            <LoadingSkeleton width=\"50px\" height=\"10px\"></LoadingSkeleton>\r\n          </span>\r\n          <span>\r\n            <LoadingSkeleton width=\"30px\" height=\"10px\"></LoadingSkeleton>\r\n          </span>\r\n        </div>\r\n        <LoadingSkeleton\r\n          width=\"100%\"\r\n          height=\"45px\"\r\n          radius=\"6px\"\r\n        ></LoadingSkeleton>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport MovieCard, { MovieCardSkeleton } from \"components/movie/MovieCard\";\r\nimport { fetcher, tmdbAPI } from \"apiConfig/config\";\r\nimport useDebounce from \"hooks/useDebounce\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { v4 } from \"uuid\";\r\nimport Button from \"components/button/Button\";\r\nimport useSWRInfinite from \"swr/infinite\";\r\nconst itemsPerPage = 20;\r\n\r\nconst MoviePage = () => {\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  const [nextPage, setNextPage] = useState(1);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [url, setUrl] = useState(tmdbAPI.getMovieList(\"popular\", nextPage));\r\n  const filterDebounce = useDebounce(filter, 500);\r\n  const handleFilterChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n  const { data, error, size, setSize } = useSWRInfinite(\r\n    (index) => url.replace(\"page=1\", `page=${index + 1}`),\r\n    fetcher\r\n  );\r\n  const movies = data ? data.reduce((a, b) => a.concat(b.results), []) : [];\r\n  const loading = !data && !error;\r\n  const isEmpty = data?.[0]?.results.length === 0;\r\n  const isReachingEnd =\r\n    isEmpty || (data && data[data.length - 1]?.results.length < itemsPerPage);\r\n  console.log(\"MoviePage ~ isReachingEnd\", isReachingEnd);\r\n  useEffect(() => {\r\n    if (filterDebounce) {\r\n      setUrl(tmdbAPI.getMovieSearch(filterDebounce, nextPage));\r\n    } else {\r\n      setUrl(tmdbAPI.getMovieList(\"popular\", nextPage));\r\n    }\r\n  }, [filterDebounce, nextPage]);\r\n  useEffect(() => {\r\n    if (!data || !data.total_results) return;\r\n    setPageCount(Math.ceil(data.total_results / itemsPerPage));\r\n  }, [data, itemOffset]);\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % data.total_results;\r\n    setItemOffset(newOffset);\r\n    setNextPage(event.selected + 1);\r\n  };\r\n  return (\r\n    <div className=\"py-10 page-container\">\r\n      <div className=\"flex mb-10\">\r\n        <div className=\"flex-1\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full p-4 text-white outline-none bg-slate-800\"\r\n            placeholder=\"Type here to search...\"\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <button className=\"p-4 text-white bg-primary\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"w-6 h-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      {/* {loading && (\r\n        <div className=\"w-10 h-10 mx-auto border-4 border-t-4 rounded-full border-primary border-t-transparent animate-spin\"></div>\r\n      )} */}\r\n      {loading && (\r\n        <div className=\"grid grid-cols-4 gap-10\">\r\n          {new Array(itemsPerPage).fill(0).map(() => (\r\n            <MovieCardSkeleton key={v4()}></MovieCardSkeleton>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className=\"grid grid-cols-4 gap-10\">\r\n        {!loading &&\r\n          movies.length > 0 &&\r\n          movies.map((item) => (\r\n            <MovieCard key={item.id} item={item}></MovieCard>\r\n          ))}\r\n      </div>\r\n      <div className=\"mt-10 text-center\">\r\n        <Button\r\n          onClick={() => (isReachingEnd ? {} : setSize(size + 1))}\r\n          disabled={isReachingEnd}\r\n          className={`${isReachingEnd ? \"bg-slate-300\" : \"\"}`}\r\n        >\r\n          Load more\r\n        </Button>\r\n      </div>\r\n      {/* <div className=\"mt-10\">\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n          className=\"pagination\"\r\n        />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useDebounce(initializeValue = \"\", delay = 1000) {\r\n  const [debounceValue, setDebounceValue] = useState(initializeValue);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebounceValue(initializeValue);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [delay, initializeValue]);\r\n\r\n  return debounceValue;\r\n}\r\n"],"names":["props","className","style","height","width","borderRadius","radius","withErrorBoundary","item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","src","tmdbAPI","alt","Date","getFullYear","Button","onClick","full","FallbackComponent","MovieCardSkeleton","useState","setPageCount","itemOffset","nextPage","filter","setFilter","url","setUrl","filterDebounce","initializeValue","delay","debounceValue","setDebounceValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","useSWRInfinite","index","replace","fetcher","data","error","size","setSize","movies","reduce","a","b","concat","results","loading","isReachingEnd","length","console","log","total_results","Math","ceil","type","placeholder","onChange","e","target","value","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Array","map","MovieCard","v4","disabled"],"sourceRoot":""}